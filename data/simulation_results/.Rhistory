sub = paste("GCM: ", gcms[i-1], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, frySurvC[,i]))
plot(test_cwt)
par(old)
}
dev.off()
} # end of c climate emissions loop
} # end of m water management loop
# Select time series: climate scenario, water management strategy, and downscaled GCMs
# management <- "NoDiversion"
# climate <- "A2"
library(biwavelet)
setwd("~/NEP_salmon/chap_3/data/simulation_results/")
# spectra_salmod_out <- function(management, climate) {
# Script that extracts a specific survival time series (Prespawn, egg and fry)
# from SALMOD output files for each climate and water management scenario.
mgmtScenarios <- c("BAU", "NoDiversion") #"ColdWater", "ForeCast", "ForecastError", "NoDiversion",
#"RaisePhilbrook", "RaisePhilbrook1710", "ReservoirCover", "Shade")
climateScenarios <- c("A2","B1")
gcms <- c("cnrmcm3", "gfdlcm21", "miroc32med", "mpiecham5", "ncarccsm3", "ncarpcm1")
gcmScenarios <- numeric(length(climateScenarios)*length(gcms))
for (m in 1:length(mgmtScenarios))  {
for (c in 1:length(climateScenarios)) {
for (k in 1:length(gcms)) {
salmod_out <- read.delim(paste(mgmtScenarios[m], "/", climateScenarios[c],"_", gcms[k], "/SALMODsumOutMerge.txt", sep = ""), sep = ",")
mortFW <- subset(salmod_out, select = c("AFem", "allMortSF", "Eggs", "FryGrad" ,"FryExit"))
mortFW$gcms <- gcms[k]
if(k == 1) mortFWgcms <- mortFW else mortFWgcms <- rbind(mortFWgcms, mortFW)
} # end of k loop
prespSurv <-  with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, PreSpawn = allMortSF/AFem))
eggSurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Egg = FryGrad/Eggs))
frySurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Fry = FryExit/FryGrad))
prespSurvC <- dcast(prespSurv, year ~ gcms, value.var = "PreSpawn")
eggSurv$Egg[which(is.na(eggSurv$Egg))] <- 0
eggSurvC <- dcast(eggSurv, year ~ gcms, value.var = "Egg")
frySurv$Fry[which(is.na(frySurv$Fry))] <- 0
frySurvC <- dcast(frySurv, year ~ gcms, value.var = "Fry")
# For each cliamte scenario and water management alternative, plot the
# the time series and wavelet spectra for each gcm for
# prespawn survival, egg survival and fry survival
# Calculate wavelet spectra
# Visualize spectra
dims <- dim(prespSurvC)
path4file <- paste("~/Dropbox/Kilduff_dissertation/Chapter_3/Figures/wavelet_spectra/", mgmtScenarios[m], "_", climateScenarios[c], ".pdf", sep = "")
pdf(file = path4file)
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(1.5, 3, 3, 1) )
plot(2010:2099, prespSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Prespawn survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, prespSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, eggSurvSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Eggs survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, eggSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, frySurvSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Fry survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, frySurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
dev.off()
} # end of c climate emissions loop
} # end of m water management loop
150 * 1.15 * 1200
150 * 1.15 * 1200 * 52 / 60
150 * 1.15 * 1300 * 52 / 60
# Select time series: climate scenario, water management strategy, and downscaled GCMs
# management <- "NoDiversion"
# climate <- "A2"
library(biwavelet)
setwd("~/NEP_salmon/chap_3/data/simulation_results/")
# spectra_salmod_out <- function(management, climate) {
# Script that extracts a specific survival time series (Prespawn, egg and fry)
# from SALMOD output files for each climate and water management scenario.
mgmtScenarios <- c("BAU", "NoDiversion") #"ColdWater", "ForeCast", "ForecastError", "NoDiversion",
#"RaisePhilbrook", "RaisePhilbrook1710", "ReservoirCover", "Shade")
climateScenarios <- c("A2","B1")
gcms <- c("cnrmcm3", "gfdlcm21", "miroc32med", "mpiecham5", "ncarccsm3", "ncarpcm1")
gcmScenarios <- numeric(length(climateScenarios)*length(gcms))
for (m in 1:length(mgmtScenarios))  {
for (c in 1:length(climateScenarios)) {
for (k in 1:length(gcms)) {
salmod_out <- read.delim(paste(mgmtScenarios[m], "/", climateScenarios[c],"_", gcms[k], "/SALMODsumOutMerge.txt", sep = ""), sep = ",")
mortFW <- subset(salmod_out, select = c("AFem", "allMortSF", "Eggs", "FryGrad" ,"FryExit"))
mortFW$gcms <- gcms[k]
if(k == 1) mortFWgcms <- mortFW else mortFWgcms <- rbind(mortFWgcms, mortFW)
} # end of k loop
prespSurv <-  with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, PreSpawn = allMortSF/AFem))
eggSurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Egg = FryGrad/Eggs))
frySurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Fry = FryExit/FryGrad))
prespSurvC <- dcast(prespSurv, year ~ gcms, value.var = "PreSpawn")
eggSurv$Egg[which(is.na(eggSurv$Egg))] <- 0
eggSurvC <- dcast(eggSurv, year ~ gcms, value.var = "Egg")
frySurv$Fry[which(is.na(frySurv$Fry))] <- 0
frySurvC <- dcast(frySurv, year ~ gcms, value.var = "Fry")
# For each cliamte scenario and water management alternative, plot the
# the time series and wavelet spectra for each gcm for
# prespawn survival, egg survival and fry survival
# Calculate wavelet spectra
# Visualize spectra
dims <- dim(prespSurvC)
path4file <- paste("~/Dropbox/Kilduff_dissertation/Chapter_3/Figures/wavelet_spectra/", mgmtScenarios[m], "_", climateScenarios[c], ".pdf", sep = "")
pdf(file = path4file)
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(1.5, 3, 3, 1) )
plot(2010:2099, prespSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Prespawn survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, prespSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, eggSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Eggs survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, eggSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, frySurvSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Fry survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, frySurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
dev.off()
} # end of c climate emissions loop
} # end of m water management loop
# Select time series: climate scenario, water management strategy, and downscaled GCMs
# management <- "NoDiversion"
# climate <- "A2"
library(biwavelet)
setwd("~/NEP_salmon/chap_3/data/simulation_results/")
# spectra_salmod_out <- function(management, climate) {
# Script that extracts a specific survival time series (Prespawn, egg and fry)
# from SALMOD output files for each climate and water management scenario.
mgmtScenarios <- c("BAU", "NoDiversion") #"ColdWater", "ForeCast", "ForecastError", "NoDiversion",
#"RaisePhilbrook", "RaisePhilbrook1710", "ReservoirCover", "Shade")
climateScenarios <- c("A2","B1")
gcms <- c("cnrmcm3", "gfdlcm21", "miroc32med", "mpiecham5", "ncarccsm3", "ncarpcm1")
gcmScenarios <- numeric(length(climateScenarios)*length(gcms))
for (m in 1:length(mgmtScenarios))  {
for (c in 1:length(climateScenarios)) {
for (k in 1:length(gcms)) {
salmod_out <- read.delim(paste(mgmtScenarios[m], "/", climateScenarios[c],"_", gcms[k], "/SALMODsumOutMerge.txt", sep = ""), sep = ",")
mortFW <- subset(salmod_out, select = c("AFem", "allMortSF", "Eggs", "FryGrad" ,"FryExit"))
mortFW$gcms <- gcms[k]
if(k == 1) mortFWgcms <- mortFW else mortFWgcms <- rbind(mortFWgcms, mortFW)
} # end of k loop
prespSurv <-  with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, PreSpawn = allMortSF/AFem))
eggSurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Egg = FryGrad/Eggs))
frySurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Fry = FryExit/FryGrad))
prespSurvC <- dcast(prespSurv, year ~ gcms, value.var = "PreSpawn")
eggSurv$Egg[which(is.na(eggSurv$Egg))] <- 0
eggSurvC <- dcast(eggSurv, year ~ gcms, value.var = "Egg")
frySurv$Fry[which(is.na(frySurv$Fry))] <- 0
frySurvC <- dcast(frySurv, year ~ gcms, value.var = "Fry")
# For each cliamte scenario and water management alternative, plot the
# the time series and wavelet spectra for each gcm for
# prespawn survival, egg survival and fry survival
# Calculate wavelet spectra
# Visualize spectra
dims <- dim(prespSurvC)
path4file <- paste("~/Dropbox/Kilduff_dissertation/Chapter_3/Figures/wavelet_spectra/", mgmtScenarios[m], "_", climateScenarios[c], ".pdf", sep = "")
pdf(file = path4file)
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(1.5, 3, 3, 1) )
plot(2010:2099, prespSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Prespawn survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, prespSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, eggSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Eggs survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, eggSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, frySurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Fry survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, frySurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
dev.off()
} # end of c climate emissions loop
} # end of m water management loop
# Select time series: climate scenario, water management strategy, and downscaled GCMs
# management <- "NoDiversion"
# climate <- "A2"
library(biwavelet)
setwd("~/NEP_salmon/chap_3/data/simulation_results/")
# spectra_salmod_out <- function(management, climate) {
# Script that extracts a specific survival time series (Prespawn, egg and fry)
# from SALMOD output files for each climate and water management scenario.
mgmtScenarios <- c("BAU", "NoDiversion") #"ColdWater", "ForeCast", "ForecastError", "NoDiversion",
#"RaisePhilbrook", "RaisePhilbrook1710", "ReservoirCover", "Shade")
climateScenarios <- c("A2","B1")
gcms <- c("cnrmcm3", "gfdlcm21", "miroc32med", "mpiecham5", "ncarccsm3", "ncarpcm1")
gcmScenarios <- numeric(length(climateScenarios)*length(gcms))
for (m in 1:length(mgmtScenarios))  {
for (c in 1:length(climateScenarios)) {
for (k in 1:length(gcms)) {
salmod_out <- read.delim(paste(mgmtScenarios[m], "/", climateScenarios[c],"_", gcms[k], "/SALMODsumOutMerge.txt", sep = ""), sep = ",")
mortFW <- subset(salmod_out, select = c("AFem", "allMortSF", "Eggs", "FryGrad" ,"FryExit"))
mortFW$gcms <- gcms[k]
if(k == 1) mortFWgcms <- mortFW else mortFWgcms <- rbind(mortFWgcms, mortFW)
} # end of k loop
prespSurv <-  with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, PreSpawn = allMortSF/AFem))
eggSurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Egg = FryGrad/Eggs))
frySurv <- with(mortFWgcms, data.frame(year = rep(2010:2099, time = 6), gcms = gcms, Fry = FryExit/FryGrad))
prespSurvC <- dcast(prespSurv, year ~ gcms, value.var = "PreSpawn")
eggSurv$Egg[which(is.na(eggSurv$Egg))] <- 0
eggSurvC <- dcast(eggSurv, year ~ gcms, value.var = "Egg")
frySurv$Fry[which(is.na(frySurv$Fry))] <- 0
frySurvC <- dcast(frySurv, year ~ gcms, value.var = "Fry")
# For each cliamte scenario and water management alternative, plot the
# the time series and wavelet spectra for each gcm for
# prespawn survival, egg survival and fry survival
# Calculate wavelet spectra
# Visualize spectra
dims <- dim(prespSurvC)
path4file <- paste("~/Dropbox/Kilduff_dissertation/Chapter_3/Figures/wavelet_spectra/", mgmtScenarios[m], "_", climateScenarios[c], ".pdf", sep = "")
pdf(file = path4file)
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(1.5, 3, 3, 1) )
plot(2010:2099, prespSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Prespawn survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, prespSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, eggSurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Eggs survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, eggSurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
for (i in 2:dims[2]) {
#i <- 2
par(fig= c(0,1,0.5,1))
old <- par(mar = c(5, 3, 3, 1) )
plot(2010:2099, frySurvC[,i], type = "l", lwd = 2, col = "darkgrey",
axes = FALSE, ylab = "Survival Rate", xlab = "Year", xlim = c(2010, 2100), xaxs = "i")
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
axis(2, at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
lab =  c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
las = 2, cex.axis = 1, tck = 0.02)
box(lwd = 2)
title(paste("GCM: ", gcms[i-1], " Fry survival emissions scenario: ", climateScenarios[c], " \n Water managament alternative: ", mgmtScenarios[m], sep = ""))
par(old)
par(fig= c(0,1,0,0.5), new = TRUE)
old <- par(mar = c(3, 3, 1, 1) )
test_cwt <- wt(cbind(2010:2099, frySurvC[,i]))
plot(test_cwt, type = "power.corr.norm", xaxt = 'n', xlim = c(2010, 2100))
axis(1, at = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
lab = c(2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100),
las = 1, cex.axis = 1, tck = 0.02)
par(old)
}
dev.off()
} # end of c climate emissions loop
} # end of m water management loop
install.packages("TSA", lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
install.packages("TSA")
install.packages("~/Downloads/TSA_1.01.tgz", repos = NULL)
library("TSA", lib.loc="/Users/patrickkilduff/Library/R/2.15/library")
install.packages("leaps")
install.packages("~/Downloads/leaps_2.9.tgz", repos = NULL)
library("TSA", lib.loc="/Users/patrickkilduff/Library/R/2.15/library")
detach("package:TSA", unload=TRUE)
,libPaths()
.libPaths()
remove.packages(TSA)
library("TSA", lib.loc="/Users/patrickkilduff/Library/R/2.15/library")
library("TSA", lib.loc="/Users/patrickkilduff/Library/R/2.15/library")
remove.packages(TSA)
remove.packages("TSA")
remove.packages("leaps")
install.packages("~/Downloads/TSA_1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/leaps_2.8.tar.gz", repos = NULL, type = "source")
source('~/NEP_salmon/chap_3/code/functions.R')
case1 <- popProjConstMarine(surv1 = 0.05,
surv2 = 0.8,
surv3 = 0.8,
survPS = "vary", # 1 or "vary"
wanted_frac = 0.5,
alpha_vec = c(5),
EQsp = c(2500, 7500, 30000),
wtrMgmt = "BAU", # can be "" for test case of survPS = 1
climate = "A2", # can be "" for test case of survPS = 1
yrs = 2010:2099,
variableSR = FALSE,
sig_r = 0.3)
plotPopProjConst(droplevels(subset(case1[[1]], age >= 3)), case1[[2]], case1[[3]], vary = "EQsp")
plotPopProjConst(droplevels(subset(case1[[1]], age >= 3)), case1[[2]], case1[[3]], vary = "EQsp")
case1 <- popProjConstMarine(surv1 = 0.05,
surv2 = 0.8,
surv3 = 0.8,
survPS = "vary", # 1 or "vary"
wanted_frac = 0.5,
alpha_vec = c(5),
EQsp = c(2500, 7500, 30000),
wtrMgmt = "BAU", # can be "" for test case of survPS = 1
climate = "A2", # can be "" for test case of survPS = 1
yrs = 2010:2099,
variableSR = FALSE,
sig_r = 0.3)
plotPopProjConst(droplevels(subset(case1[[1]], age >= 3)), case1[[2]], case1[[3]], vary = "EQsp")
case1
plotPopProjConst(droplevels(subset(case1[[1]], age >= 3)), case1[[2]], case1[[3]], vary = "EQsp")
plot(1:10)
plot(1:10)
